// ----
// Sass (v3.3.10)
// Compass (v1.0.0.alpha.20)
// Susy (v2.1.2)
// ----
$susy: ( 
    flow: ltr, // ltr | rtl
    output: float, // float | isolate
    math: fluid, // fluid | static (requires column-width)
    column-width: false, // false | value
    container: 75%, // length or % | auto
    container-position: center, // left | center | right | <length> [*2] (grid padding)
    last-flow: to, columns: 12, gutters: 1, gutter-position: after, // before | after | split | inside | inside-static (requires column-width)
    global-box-sizing: content-box, // content-box | border-box (affects inside/inside-static)
    debug: ( image: hide, color: rgba(#66f, .25), output: background, // background | overlay
    toggle: top right, ), use-custom: ( background-image: true, // look for background-image mixin
    background-options: false, // look for background-size, -origin and -clip and other compass/bourbon mixins
    box-sizing: true, // look for custom bix sizing mixin
    clearfix: false, // true = look for internal clearfix before using micro clearfix
    rem: true, // look for rem mixin
));


header {
    height: 150px;
    background: #2F94B2;
    margin-bottom: 10px;
    h1 {
        margin: 10px;
    }
}

.hero {
    height: 100px;
    margin-bottom: 10px;
    h3,
    h2 {
        margin: 10px;
    }
    .one {
        background: #FF739C;
        height: 100%;
    }
    .two {
        height: 100%;
        div {
            height: 100%;
            background: #CCC136;
        }
    }
}

.content {
    h3 {
        margin: 10px;
    }
    div {
        height: 100px;
        margin-top: 10px;
        margin-bottom: 10px;
    }
    div:nth-child(3n) {
        background: #2F94B2;
    }
    div:nth-child(3n+1) {
        background: #FF7311;
    }
    div:nth-child(3n+2) {
        background: #5DD9FF;
    }
}

////  GRID
.page {
    @include container;
    
    h1, h2, h3, h4, h5, h6 {
        font-family: helvetica;
    }
}

header {
    @include full;
}

.hero {
    clear: both;
    .one {
        @include span(first 4);
    }
    .two {
        @include span(last 8 nest);
        div:nth-child(4n+1) {
            clear: both;
            @include span(2 at 1 of 8);
        }
        div:nth-child(4n+2) {
            @include span(2 at 3 of 8);
        }
        div:nth-child(4n+3) {
            @include span(2 at 5 of 8);
        }
        div:nth-child(4n) {
            @include span(last 2 of 8);
        }
        div:nth-child(4) {
            @include span(last 2 of 8);
        }
    }
}

.content {
    div {
        @include gallery(4);
    }
}